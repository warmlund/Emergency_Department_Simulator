<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Emergency_Department_Simulator_PL">

    <!--#region Colors -->
    <SolidColorBrush x:Key="ButtonBackgroundColor" Color="#0078D4"/>
    <SolidColorBrush x:Key="ButtonBackgroundMouseOver" Color="#add9ff"/>
    <SolidColorBrush x:Key="ButtonBackgroundPressedColor" Color="#174275"/>
    <SolidColorBrush x:Key="ButtonBackgroundDisabledColor" Color="#c2c2c2"/>
    <SolidColorBrush x:Key="ButtonTextColor" Color="#ffffff"/>
    <SolidColorBrush x:Key="ButtonTextDisabledColor" Color="#818181"/>
    <SolidColorBrush x:Key="TextColor" Color="#000000"/>
    <SolidColorBrush x:Key="MainBackgroundColor" Color="#F3F3F3"/>
    <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#ffffff"/>
    <SolidColorBrush x:Key="BorderColor" Color="#e1e1e1"/>
    <!--#endregion-->

    <!--#region Window styles-->
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{DynamicResource MainBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="WindowStyle" Value="ThreeDBorderWindow"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="Width" Value="1024"/>
        <Setter Property="Height" Value="768"/>
    </Style>
    <!--#endregion-->

    <!--#region Textblock styles-->
    <Style x:Key="ButtonTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="StatusTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>


    <Style x:Key="TitleTextblockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

    <!--#region labelstyles-->
    <Style x:Key="LabelNumberStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <!--#endregion-->

    <!--#region Button styles-->
    <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder"
                      Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding Background}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ButtonTextDisabledColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabledColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressedColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TextBox Styles -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="140"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="AcceptsTab" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="TextBoxBorder" Background="Transparent" BorderBrush="{DynamicResource BorderColor}" BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Datagrid styles -->
    <Style x:Key="DatagridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
    </Style>

    <Style x:Key="DatagridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatagridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DatagridHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
    </Style>
    <!--#endregion-->

</ResourceDictionary>